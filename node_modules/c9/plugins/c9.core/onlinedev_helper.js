"use strict";

plugin.consumes = [
    "db"
];
plugin.provides = [
    "onlinedev_helper"
];

module.exports = plugin;

function plugin(options, imports, register) {
    var db = imports.db;
    var fs = require("fs");
    var child_process = require("child_process");
    var async = require("async");
    var https = require("https");
    
    function initHosts(callback) {
        getDockerHosts(function(err, dockerHosts) {
            if (err) return callback(err);

            fs.readFile("/etc/hosts", "utf-8", function(err, file) {
                if (err) return callback(err);
                
                var entries = file.split("\n").filter(function(entry) {
                    return !dockerHosts.some(function(h) {
                        return entry.indexOf(h.hostname) > -1;
                    });
                }).concat(dockerHosts.map(function(h) {
                    return h.ip + " " + h.hostname;
                }));
                
                child_process.execFile("sudo", ["sh", "-c", "echo '" + entries.join("\n") + "' > /etc/hosts"], function(err) {
                    callback(err);
                });
            });
        });
    }
    
    function getDockerHosts(callback) {
        db.DockerHost.findAll(function(err, servers) {
            if (err) return callback(err);
            
            var results = [];
            for (var hostname in servers) {
                if (servers[hostname].ip)
                    results.push({ ip: servers[hostname].ip, hostname: hostname });
            }
            
            callback(null, results);
        });
    }
    
    function checkPublic(tries, callback) {
        if (!callback) return checkPublic(0, tries);
        
        https.request({ host: options.host, path: "/" }, function(res) {
            res.on("data", function() {
                // Required handler
            }).on("end", function() {
                if (res.statusCode === 302)
                    return done(new Error("Please make sure your hosted Cloud9 application proxy is public using the \"Share dialog\". NEVER make the editor public though!"));
                done();
            });
        }).on("error", function(err) {
            done(new Error("Error connecting to your hosted workspace: " + err.message));
        }).on("timeout", function(err) {
            done(new Error("Error connecting to your hosted workspace: " + err.message));
        }).end();
        
        function done(err) {
            if (!callback)
                return;
            if (err && tries < 3)
                return setTimeout(checkPublic.bind(null, tries + 1, callback), 5000);
                
            callback(err);
            callback = null;
        }
    }

    async.series([
        initHosts,
        checkPublic,
    ], function(err) {
        register(err, {
            "onlinedev_helper": {}
        });
    });
}
